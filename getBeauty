import urllib.request
import re
import os

lens = 0
num = 1
def imageCrawler(url,toPath):
    #图片爬虫
    global lens
    global num
    #设置headers
    headers = {
        "User-Agent": "Opera/9.80 (Windows NT 6.1; U; zh-cn) Presto/2.9.168 Version/11.50"
    }
    #设置请求头
    req = urllib.request.Request(url,headers = headers)
    response = urllib.request.urlopen(req)
    #解码为str
    HtmlStr = response.read().decode("utf-8")
    #自己摸索的正则表达式  写的很渣~~~
    pat = r'<div class="list_width big clearfix" id="itemSearchList">(.*?)<!-- req.fashionCateType = 2 -->'
    #编译正则表达式
    pat_nvzhuang = re.compile(pat,re.S)
    resoult = pat_nvzhuang.findall(HtmlStr)
    #将爬出来的东西再用正则表达式匹配一下，得到图片的下载路径
    patima = r'<img original="(.*?)" />'
    patima_nvz = re.compile(patima,re.S)
    src_imgs = patima_nvz.findall(resoult[0])
    #因为得到下载路径有的最后多一个title，所以要取得最终的下载路径
    pz = r'//.*?.jpg'
    patima_pz = re.compile(pz, re.S)

    for imgURL in src_imgs:
        # 将下载路径逐个取出，然后下载保存到本地
        src_imgs = patima_pz.findall(imgURL)
        path = os.path.join(toPath,str(num)+".jpg")
        num+=1
        #把图片下载到本地存储
        lens+=1

        urllib.request.urlretrieve("http:"+src_imgs[0],filename = path)
        print("已经下载"+str(lens)+"张美女图片")
    src_imgs.clear()
#path路径可以自己改动
toPath = "E:\python\duanzi\image"
for i in range(1,50):
    #规定爬50页的1号店的小姐姐图片
    url = r"https://search.yhd.com/c1343-0-0/mbname-b/a35606::2880-s1-v4-p1-price-d0-f0b-m1-rt0-pid-mid0-color-size-k/#page="+str(i)+"&sort=1"
    print(url)
    imageCrawler(url,toPath)
